---
name: Continuous Integration

on:
  pull_request:
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "LICENSE"
  push:
    branches:
      - main
    paths-ignore:
      - "docs/**"
      - "*.md"
      - "LICENSE"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_TERM_COLOR: always

jobs:
  fast-checks:
    name: üèÅ Fast Checks (Format)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Install required components
        run: rustup component add rustfmt
      - name: Run format checks
        run: |
          cargo fmt --all -- --check

  build-and-test-matrix:
    name: üõ†Ô∏è Build & Test Matrix
    needs: fast-checks
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Install dependencies (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq --no-install-recommends \
            libclang-dev \
            protobuf-compiler
      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install protobuf
      - name: Build
        run: cargo build --release
      - name: Test
        run: cargo test --release

  analysis:
    name: ü§ñ Analysis (Doc)
    needs: fast-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Install dependencies
        run: |
          sudo apt-get update -yqq
          sudo apt-get install -yqq --no-install-recommends \
            libclang-dev \
            protobuf-compiler
      - name: Install required components
        run: rustup component add rust-src
      - name: Run doc
        run: cargo doc --no-deps

  no-std-check:
    name: üß™ no_std (wasm32v1-none)
    needs: fast-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
      - name: Add wasm32v1-none target
        run: rustup target add wasm32v1-none
      - name: Run no_std check script
        run: scripts/check-no-std.sh

  security-audit:
    name: üîí Security Audit
    needs: fast-checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install cargo-audit
        run: cargo install cargo-audit --locked
      - name: Run security audit
        run: cargo audit